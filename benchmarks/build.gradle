import org.apache.commons.lang3.SystemUtils

buildscript {
    ext.jmhVersion = '1.35'
    ext.jmhPlugin = '0.6.6'
    ext.jmhReportPlugin = '0.9.0'
    repositories {
        maven {
            url "https://cache-redirector.jetbrains.com/plugins.gradle.org/m2"
        }
    }
    dependencies {
        classpath 'org.apache.commons:commons-lang3:3.5'
    }
}

plugins {
    id "me.champeau.jmh" version "$jmhPlugin"
    id "io.morethan.jmhreport" version "$jmhReportPlugin"
}

dependencies {
    jmh project(':environment')
    jmh project(':entity-store')
    jmh project(':query')
    jmh project(':crypto')
    jmh "org.openjdk.jmh:jmh-core:$jmhVersion"
    jmh "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
    jmh group: 'junit', name: 'junit', version: "$junitVersion"
    jmh group: 'org.mapdb', name: 'mapdb', version: '3.0.2'
    jmh group: 'net.openhft', name: 'chronicle-map', version: '3.11.0'
    jmh group: 'com.h2database', name: 'h2-mvstore', version: '1.4.193'
    jmh group: 'org.deephacks.lmdbjni', name: 'lmdbjni', version: '0.4.6'
    jmh group: 'com.akiban', name: 'akiban-persistit', version: '3.3.0'

    def os
    if (SystemUtils.IS_OS_LINUX) {
        os = "linux64"
    } else if (SystemUtils.IS_OS_MAC_OSX) {
        os = "osx64"
    } else if (SystemUtils.IS_OS_WINDOWS) {
        os = "win64"
    }
    if (os) {
        jmh group: 'org.deephacks.lmdbjni', name: "lmdbjni-$os", version: '0.4.6'
    }
}

jmh {
    // uncomment the following line to exclude all benchmarks except Xodus Tokyo Cabinet
    excludes = ['dataStructures|util|chronicle|h2|mapdb|lmdb|persistit|query|crypto|.*Prefixing.*']
    jmhVersion = project.jmhVersion
    jvmArgsPrepend = ['-Xmx1g', '-Xms1g']
    duplicateClassesStrategy = DuplicatesStrategy.WARN
    resultFormat = 'JSON'
}

task deleteEmptyBenchmarkList(type: Delete) {
    delete "$buildDir/jmh-generated-classes/META-INF/BenchmarkList"
}
jmhCompileGeneratedClasses.finalizedBy deleteEmptyBenchmarkList

jmhReport {
    jmhResultPath = project.file('build/reports/jmh/results.json')
    jmhReportOutput = project.file('build/reports/jmh')
}
tasks.jmh.finalizedBy tasks.jmhReport