# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import IndexManager_pb2 as IndexManager__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class IndexManagerStub(object):
    """
    Service for handling (create, drop, build) and searching of neighbours in vector indexes.
    Service works in two modes:
    1. Build mode - allows to create, upload vectors and build indexes, but does not allow to search nearest
    neighbours.
    2. Search mode - allows to search nearest neighbors but does not allow to create or build new indexes.

    Each index undergoes several states during its lifecycle:
    1. Created
    2. Uploading vectors
    3. In build queue
    4. Building
    5. Built
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateIndex = channel.unary_unary(
                '/IndexManager/CreateIndex',
                request_serializer=IndexManager__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=IndexManager__pb2.CreateIndexResponse.FromString,
                )
        self.TriggerIndexBuild = channel.unary_unary(
                '/IndexManager/TriggerIndexBuild',
                request_serializer=IndexManager__pb2.IndexNameRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DropIndex = channel.unary_unary(
                '/IndexManager/DropIndex',
                request_serializer=IndexManager__pb2.IndexNameRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListIndexes = channel.unary_unary(
                '/IndexManager/ListIndexes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=IndexManager__pb2.IndexListResponse.FromString,
                )
        self.RetrieveIndexState = channel.unary_unary(
                '/IndexManager/RetrieveIndexState',
                request_serializer=IndexManager__pb2.IndexNameRequest.SerializeToString,
                response_deserializer=IndexManager__pb2.IndexStateResponse.FromString,
                )
        self.BuildStatus = channel.unary_stream(
                '/IndexManager/BuildStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=IndexManager__pb2.BuildStatusResponse.FromString,
                )
        self.UploadVectors = channel.stream_unary(
                '/IndexManager/UploadVectors',
                request_serializer=IndexManager__pb2.UploadVectorsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.FindNearestNeighbours = channel.unary_unary(
                '/IndexManager/FindNearestNeighbours',
                request_serializer=IndexManager__pb2.FindNearestNeighboursRequest.SerializeToString,
                response_deserializer=IndexManager__pb2.FindNearestNeighboursResponse.FromString,
                )
        self.SwitchToSearchMode = channel.unary_unary(
                '/IndexManager/SwitchToSearchMode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SwitchToBuildMode = channel.unary_unary(
                '/IndexManager/SwitchToBuildMode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class IndexManagerServicer(object):
    """
    Service for handling (create, drop, build) and searching of neighbours in vector indexes.
    Service works in two modes:
    1. Build mode - allows to create, upload vectors and build indexes, but does not allow to search nearest
    neighbours.
    2. Search mode - allows to search nearest neighbors but does not allow to create or build new indexes.

    Each index undergoes several states during its lifecycle:
    1. Created
    2. Uploading vectors
    3. In build queue
    4. Building
    5. Built
    """

    def CreateIndex(self, request, context):
        """
        Creates new index by name.
        If index with given name exist, error will be returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerIndexBuild(self, request, context):
        """
        Triggers build of index with already uploaded vectors.
        Index should be in UPLOADED or CREATED state.
        Otherwise error will be thrown.
        Command does not wait till index built will be completed it places index into build queue and exists.
        To check completeness of build RetrieveIndexStatus command can be called.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropIndex(self, request, context):
        """
        Removes already existing indexes.
        Index can not be removed if vectors currently uploaded in index or if it is being build.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIndexes(self, request, context):
        """
        Returns list of indexes inside server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveIndexState(self, request, context):
        """
        Returns state of index by its name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildStatus(self, request, context):
        """
        Returns current state of index build routine inside server.
        All indexes in build queue are built one by one on server.
        Each index build is split on several phases, each phase may have sub-phases.
        Each phase may use different parameters, and also if that is applicable, progress inside each phase
        also reported.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadVectors(self, request_iterator, context):
        """
        Uploads vectors that will then be indexed during build phase of index lifecycle.
        Once index is build new vectors can not be uploaded.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNearestNeighbours(self, request, context):
        """
        Finds K nearest neighbors of passed in vectors in index.
        Index can be found only if server working in search mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchToSearchMode(self, request, context):
        """
        Switches server in search mode. This mode allows to find nearest neighbours of passed in vector, but not
        allows to build indexes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchToBuildMode(self, request, context):
        """
        Switches server in build mode. This mode allows to build indexes but not allows to search nearest neighbours.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndexManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=IndexManager__pb2.CreateIndexRequest.FromString,
                    response_serializer=IndexManager__pb2.CreateIndexResponse.SerializeToString,
            ),
            'TriggerIndexBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerIndexBuild,
                    request_deserializer=IndexManager__pb2.IndexNameRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DropIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DropIndex,
                    request_deserializer=IndexManager__pb2.IndexNameRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListIndexes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIndexes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=IndexManager__pb2.IndexListResponse.SerializeToString,
            ),
            'RetrieveIndexState': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveIndexState,
                    request_deserializer=IndexManager__pb2.IndexNameRequest.FromString,
                    response_serializer=IndexManager__pb2.IndexStateResponse.SerializeToString,
            ),
            'BuildStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.BuildStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=IndexManager__pb2.BuildStatusResponse.SerializeToString,
            ),
            'UploadVectors': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadVectors,
                    request_deserializer=IndexManager__pb2.UploadVectorsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'FindNearestNeighbours': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNearestNeighbours,
                    request_deserializer=IndexManager__pb2.FindNearestNeighboursRequest.FromString,
                    response_serializer=IndexManager__pb2.FindNearestNeighboursResponse.SerializeToString,
            ),
            'SwitchToSearchMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchToSearchMode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SwitchToBuildMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchToBuildMode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IndexManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IndexManager(object):
    """
    Service for handling (create, drop, build) and searching of neighbours in vector indexes.
    Service works in two modes:
    1. Build mode - allows to create, upload vectors and build indexes, but does not allow to search nearest
    neighbours.
    2. Search mode - allows to search nearest neighbors but does not allow to create or build new indexes.

    Each index undergoes several states during its lifecycle:
    1. Created
    2. Uploading vectors
    3. In build queue
    4. Building
    5. Built
    """

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/CreateIndex',
            IndexManager__pb2.CreateIndexRequest.SerializeToString,
            IndexManager__pb2.CreateIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerIndexBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/TriggerIndexBuild',
            IndexManager__pb2.IndexNameRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/DropIndex',
            IndexManager__pb2.IndexNameRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListIndexes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/ListIndexes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            IndexManager__pb2.IndexListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveIndexState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/RetrieveIndexState',
            IndexManager__pb2.IndexNameRequest.SerializeToString,
            IndexManager__pb2.IndexStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/IndexManager/BuildStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            IndexManager__pb2.BuildStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadVectors(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/IndexManager/UploadVectors',
            IndexManager__pb2.UploadVectorsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNearestNeighbours(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/FindNearestNeighbours',
            IndexManager__pb2.FindNearestNeighboursRequest.SerializeToString,
            IndexManager__pb2.FindNearestNeighboursResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchToSearchMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/SwitchToSearchMode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchToBuildMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IndexManager/SwitchToBuildMode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
